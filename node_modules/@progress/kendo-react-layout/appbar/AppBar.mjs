/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import * as e from "react";
import t from "prop-types";
import { validatePackage as h, focusFirstFocusableChild as C, useId as y, classNames as g } from "@progress/kendo-react-common";
import { packageMetadata as N } from "../package-metadata.mjs";
const l = e.forwardRef((o, m) => {
  h(N);
  const { children: d, className: c, style: u, id: f } = o, s = e.useRef(null), p = e.useCallback(() => {
    s.current && C(s.current);
  }, []), b = e.useCallback(
    () => ({
      element: s.current,
      focus: p
    }),
    [p]
  );
  e.useImperativeHandle(m, b);
  const k = y(), i = e.useMemo(() => o.themeColor || r.themeColor, [o.themeColor]), n = e.useMemo(() => o.position || r.position, [o.position]), a = e.useMemo(() => o.positionMode || r.positionMode, [o.positionMode]), M = e.useMemo(
    () => g(
      "k-appbar",
      {
        "k-appbar-top": n === "top",
        "k-appbar-bottom": n === "bottom",
        "k-appbar-static": a === "static",
        "k-appbar-sticky": a === "sticky",
        "k-appbar-fixed": a === "fixed",
        [`k-appbar-${i}`]: !!i
      },
      c
    ),
    [n, a, i, c]
  );
  return /* @__PURE__ */ e.createElement("div", { className: M, style: u, id: f || k }, d);
});
l.propTypes = {
  children: t.any,
  className: t.string,
  style: t.object,
  id: t.string,
  themeColor: t.string,
  position: t.oneOf(["top", "bottom"]),
  positionMode: t.oneOf(["static", "sticky", "fixed"])
};
const r = {
  themeColor: "light",
  position: "top",
  positionMode: "static"
};
l.displayName = "KendoAppBar";
export {
  l as AppBar
};
