/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import * as e from "react";
import v from "prop-types";
import { classNames as h } from "@progress/kendo-react-common";
import { TimelineHorizontal as y } from "./TimelineHorizontal.mjs";
import { TimelineVertical as E } from "./TimelineVertical.mjs";
const T = (c) => {
  const p = {
    alterMode: !1,
    collapsibleEvents: !1,
    dateFormat: "MMM dd, yyyy",
    ...c
  }, {
    collapsibleEvents: i,
    transitionDuration: r,
    className: f,
    alterMode: n,
    navigatable: l,
    horizontal: t,
    events: o,
    dateFormat: s,
    onChange: d,
    onActionClick: m
  } = p, [k, u] = e.useState(), a = e.useRef(null);
  return e.useEffect(() => {
    a.current && u(a.current.offsetWidth);
  }, []), /* @__PURE__ */ e.createElement(
    "div",
    {
      ref: a,
      className: h(
        "k-timeline",
        {
          "k-timeline-collapsible": i,
          "k-timeline-vertical": !t,
          "k-timeline-alternating": n,
          "k-timeline-horizontal": t
        },
        f
      ),
      style: { width: `${k}px` }
    },
    t ? /* @__PURE__ */ e.createElement(
      y,
      {
        navigatable: l,
        eventsData: o,
        dateFormat: s,
        transitionDuration: r,
        onActionClick: m
      }
    ) : /* @__PURE__ */ e.createElement(
      E,
      {
        navigatable: l,
        eventsData: o,
        dateFormat: s,
        alterMode: n,
        collapsibleEvents: i,
        transitionDuration: r,
        onChange: d,
        onActionClick: m
      }
    )
  );
};
T.propTypes = {
  className: v.string
};
export {
  T as Timeline
};
