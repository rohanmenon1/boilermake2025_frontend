/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as n from "react";
import { useDraggable as i } from "./hooks/useDraggable.mjs";
const m = n.forwardRef((e, c) => {
  const r = n.useRef(null), l = n.useRef(null), t = n.useCallback(
    () => r.current && r.current.element ? r.current.element : r.current,
    [r]
  );
  n.useImperativeHandle(l, () => ({ element: t() || null })), n.useImperativeHandle(c, () => l.current), n.useImperativeHandle(e.childRef, () => r.current);
  const u = n.useCallback(
    (a) => {
      e.onPress && e.onPress({
        element: t(),
        target: l.current,
        event: a
      });
    },
    [t, e.onPress]
  ), g = n.useCallback(
    (a) => {
      e.onRelease && e.onRelease({
        element: t(),
        target: l.current,
        event: a
      });
    },
    [t, e.onRelease]
  ), o = n.useCallback(
    (a) => {
      e.onDragStart && e.onDragStart({
        element: t(),
        target: l.current,
        event: a
      });
    },
    [e, t]
  ), d = n.useCallback(
    (a) => {
      e.onDrag && e.onDrag({
        element: t(),
        target: l.current,
        event: a
      });
    },
    [t, e.onDrag]
  ), s = n.useCallback(
    (a) => {
      e.onDragEnd && e.onDragEnd({
        element: t(),
        target: l.current,
        event: a
      });
    },
    [t, e.onDragEnd]
  );
  return i(
    r,
    {
      onPress: u,
      onRelease: g,
      onDragStart: o,
      onDrag: d,
      onDragEnd: s
    },
    {
      mouseOnly: e.mouseOnly,
      autoScroll: e.autoScroll,
      hint: e.hint,
      scrollContainer: e.scrollContainer
    }
  ), e.children ? n.cloneElement(n.Children.only(e.children), { ref: r }) : null;
});
m.displayName = "KendoReactDraggable";
export {
  m as Draggable
};
