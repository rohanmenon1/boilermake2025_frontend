/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const E=require("react"),u=require("@progress/kendo-react-common");function O(s){const n=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(s){for(const o in s)if(o!=="default"){const r=Object.getOwnPropertyDescriptor(s,o);Object.defineProperty(n,o,r.get?r:{enumerable:!0,get:()=>s[o]})}}return n.default=s,Object.freeze(n)}const c=O(E),b=s=>{const{data:n=[]}=s;return c.createElement("div",{className:"k-selection-aggregates k-grid-selection-aggregates"},n.map((o,r)=>c.createElement("div",{key:r},c.createElement("span",{className:"k-selection-aggregates-item-text"},o.type,": "),c.createElement("span",{className:"k-selection-aggregates-item-value"},o.formattedValue))))};b.displayName="KendoReactGridStatusBar";const p=s=>{var o;const n=s.slice();for(let r=0;r<n.length;r++)for(;n[r]&&((o=n[r].children)!=null&&o.length);)n.splice(r,1,...n[r].children);return n},j=s=>{const{dataItems:n,target:o}=s,y=p(o.columns).map(e=>e.field).filter(e=>e&&typeof e=="string").map(e=>u.getter(e)),S="selectedField"in s?u.getter(s.selectedField):e=>s.select[u.getter(s.dataItemKey)(e)],t={dates:[],numbers:[],booleans:[],others:[]},D=e=>{typeof e=="number"?t.numbers.push(e):typeof e=="boolean"?t.booleans.push(e):e instanceof Date?t.dates.push(e):t.others.push(e)};n.forEach(e=>{const a=S(e);a&&a.forEach(l=>{D(y[l](e))})});const m=t.dates.map(e=>e.getTime()),d=t.booleans.filter(e=>e).length,g=t.booleans.filter(e=>!e).length,i=t.numbers.length?t.numbers.reduce((e,a)=>e+=a,0):void 0,f={sum:i,average:typeof i=="number"?i/t.numbers.length:void 0,min:t.numbers.length?Math.min(...t.numbers):void 0,max:t.numbers.length?Math.max(...t.numbers):void 0,count:t.numbers.length+t.booleans.length+t.dates.length+t.others.length,isTrue:d>0?d:void 0,isFalse:g>0?g:void 0,earliest:t.dates.length?new Date(Math.min(...m)):void 0,latest:t.dates.length?new Date(Math.max(...m)):void 0},v=(e,a)=>(a==="sum"||a==="average")&&typeof e=="number"?e.toFixed(2):(a==="earliest"||a==="latest")&&e instanceof Date?e.toLocaleDateString():String(e),h=[];return Object.keys(f).forEach(e=>{const a=e,l=f[a];l!==void 0&&h.push({type:a,value:l,formattedValue:v(l,a)})}),h};exports.StatusBar=b;exports.getStatusData=j;exports.leafColumns=p;
