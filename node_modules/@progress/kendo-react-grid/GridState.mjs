/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import h from "react";
const L = h.createContext([{}, () => {
}, {}]), nt = () => h.useContext(L), lt = (e) => {
  var C, k, m, G, D, P, F, _, H, R, T, b, j, q, w, y, z, A, B, I, J, K;
  const {
    children: M,
    onEditChange: o,
    onFilterChange: d,
    onSortChange: c,
    onSearchChange: r,
    onPageChange: i,
    onGroupChange: u,
    onDataStateChange: s,
    onSelectionChange: g,
    onDetailExpandChange: S,
    onGroupExpandChange: x,
    onHeaderSelectionChange: E,
    onColumnsStateChange: f
  } = e, [l, n] = h.useState({
    edit: (C = e.defaultEdit) != null ? C : e.edit,
    filter: (k = e.defaultFilter) != null ? k : e.filter,
    select: (m = e.defaultSelect) != null ? m : e.select,
    search: (G = e.defaultSearch) != null ? G : e.search,
    sort: (D = e.defaultSort) != null ? D : e.sort,
    take: (P = e.defaultTake) != null ? P : e.take,
    skip: (F = e.defaultSkip) != null ? F : e.skip,
    group: (_ = e.defaultGroup) != null ? _ : e.group,
    detailExpand: (H = e.defaultDetailExpand) != null ? H : e.detailExpand,
    groupExpand: (R = e.defaultGroupExpand) != null ? R : e.groupExpand,
    columnsState: (T = e.defaultColumnsState) != null ? T : e.columnsState
  }), N = {
    edit: (b = e.edit) != null ? b : l.edit,
    filter: (j = e.filter) != null ? j : l.filter,
    search: (q = e.search) != null ? q : l.search,
    sort: (w = e.sort) != null ? w : l.sort,
    take: (y = e.take) != null ? y : l.take,
    skip: (z = e.skip) != null ? z : l.skip,
    group: (A = e.group) != null ? A : l.group,
    select: (B = e.select) != null ? B : l.select,
    detailExpand: (I = e.detailExpand) != null ? I : l.detailExpand,
    groupExpand: (J = e.groupExpand) != null ? J : l.groupExpand,
    columnsState: (K = e.columnsState) != null ? K : l.columnsState
  }, O = (t) => {
  }, Q = (t) => {
    n((a) => ({ ...a, edit: t.edit })), o == null || o(t);
  }, U = (t) => {
    n((a) => ({ ...a, filter: t.filter })), d == null || d(t);
  }, V = (t) => {
    n((a) => ({ ...a, search: t.search })), r == null || r(t);
  }, W = (t) => {
    n((a) => ({ ...a, sort: t.sort })), c == null || c(t);
  }, X = (t) => {
    n((a) => ({ ...a, ...t.page })), i == null || i(t);
  }, Y = (t) => {
    n((a) => ({ ...a, group: t.group })), u == null || u(t);
  }, Z = (t) => {
    n((a) => ({ ...a, ...t.dataState })), s == null || s(t);
  }, $ = (t) => {
    n((a) => ({ ...a, select: t.select })), g == null || g(t);
  }, v = (t) => {
    n((a) => ({ ...a, select: t.select })), E == null || E(t);
  }, p = (t) => {
    n((a) => ({ ...a, detailExpand: t.detailExpand })), S == null || S(t);
  }, tt = (t) => {
    n((a) => ({ ...a, groupExpand: t.groupExpand })), x == null || x(t);
  }, et = (t) => {
    n((a) => ({ ...a, columnsState: t.columnsState })), f == null || f(t);
  };
  return /* @__PURE__ */ h.createElement(
    L.Provider,
    {
      value: [
        N,
        O,
        {
          onEditChange: Q,
          onFilterChange: d && U,
          onSearchChange: V,
          onSortChange: c && W,
          onPageChange: i && X,
          onGroupChange: u && Y,
          onDataStateChange: Z,
          onSelectionChange: $,
          onHeaderSelectionChange: v,
          onDetailExpandChange: p,
          onGroupExpandChange: tt,
          onColumnsStateChange: et
        }
      ]
    },
    M
  );
};
export {
  lt as GridClientStateProvider,
  nt as useGridState
};
