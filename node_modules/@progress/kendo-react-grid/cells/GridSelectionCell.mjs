/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import * as e from "react";
import { classNames as S } from "@progress/kendo-react-common";
import { GridSelectionCellInput as y } from "./client/GridSelectionCellInput.mjs";
import { GridSelectionCellContainer as i } from "./client/GridSelectionCellContainer.mjs";
import { getClientCellProps as N, isClientReference as x } from "../utils/index.mjs";
const w = (n) => {
  const { className: m, colSpan: C, style: d, ariaColumnIndex: u, rowType: c, cells: p } = n, f = S("k-table-td", m), t = {
    colSpan: C,
    style: d,
    className: f,
    "aria-colindex": u,
    role: "gridcell"
  }, o = /* @__PURE__ */ e.createElement(y, { key: 1, ...n }), r = N(n), s = c || "data", l = p;
  if (l && l.select && l.select[s]) {
    const a = l.select[s], E = x(a);
    return /* @__PURE__ */ e.createElement(i, { cellProps: r, tdProps: t, isCustom: !0, isClient: E }, /* @__PURE__ */ e.createElement(a, { ...r, tdProps: t }, o));
  }
  const g = c !== "groupHeader" ? /* @__PURE__ */ e.createElement("td", { ...t }, o) : null;
  return /* @__PURE__ */ e.createElement(i, { cellProps: r, content: o, tdProps: t }, g);
};
export {
  w as GridSelectionCell
};
