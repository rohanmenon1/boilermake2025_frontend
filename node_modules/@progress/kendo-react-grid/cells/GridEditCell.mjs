/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2025 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
import * as l from "react";
import { getClientCellProps as u, isClientReference as E } from "../utils/index.mjs";
import { uGrid as f, classNames as G } from "@progress/kendo-react-common";
import { GRID_COL_INDEX_ATTRIBUTE as x } from "../constants/index.mjs";
import { GridEditCellEditor as I } from "./client/GridEditCellEditor.mjs";
import { GridEditCellContainer as o } from "./client/GridEditCellContainer.mjs";
const T = (e) => {
  const c = e.unstyled, a = c && c.uGrid ? c.uGrid : f, m = G(a.editTd({ selected: e.isSelected }), e.className), i = {
    colSpan: e.colSpan,
    style: e.style,
    className: m,
    "aria-colindex": e.ariaColumnIndex,
    "aria-selected": e.isSelected,
    [x]: e.columnIndex,
    role: "gridcell"
  }, n = u(e), d = /* @__PURE__ */ l.createElement(I, { cellProps: n }), r = e.editor || "text", t = e.cells;
  if (t) {
    let s;
    t.edit && t.edit[r] ? s = t.edit[r] : t.data && (s = t.data);
    const C = E(s);
    return /* @__PURE__ */ l.createElement(o, { cellProps: n, tdProps: i, isCustom: !0, isClient: C }, /* @__PURE__ */ l.createElement(s, { ...n, tdProps: i }, d));
  }
  return /* @__PURE__ */ l.createElement(o, { cellProps: n, content: d, tdProps: i }, /* @__PURE__ */ l.createElement("td", { ...i }, d));
};
export {
  T as GridEditCell
};
